{% trans_default_domain 'translation' %}

<script>

    var takenIds;

    // this variable is the list in the dom, it's initiliazed when the document is ready
    var $collectionHolder;
    // the link which we click on to add new items
    // when the page is loaded and ready
    $(document).ready(function () {

        $('.js-datepicker').datepicker({
            format: 'yyyy-mm-dd'
        });

        // get the collectionHolder, initilize the var by getting the list;
        $collectionHolder = $('#road_section_list');


        if($collectionHolder.find('.panel').length == 0)
        {
            $collectionHolder.data('index', 0);
        }else {
            var $string = $collectionHolder.find('.panel').last().find('[id*=winter_jobs_RoadSections_]').attr('id');
            $string = $string.replace('winter_jobs_RoadSections_', '');
            $string = $string.replace('_RoadSectionSearch', '');
            console.log(($string));
            $collectionHolder.data('index', parseInt($string) + 1);
        }



        $collectionHolder.find('.panel').each(function (){

            addRemoveButton($(this));
        });


        refreshAutocorrect();

        // handle the click event for addNewItem
        $('#button_to_add_new_road').click(function (e) {
            // preventDefault() is your  homework if you don't know what it is
            // also look up preventPropagation both are usefull
            e.preventDefault();
            // create a new form and append it to the collectionHolder
            // and by form we mean a new panel which contains the form
            addNewForm();
        })

        $( "#winter_jobs_JobName" ).autocomplete({
            source: "{{ path('search') }}",
            minLength: 1,
            delay: 500,
            select: function( event, ui ) {
                $('#winter_jobs_JobId').val(ui.item.job_id),
                    $('#winter_jobs_JobQuantity').val(ui.item.unit_of)
            }
        });
    });
    /*
     * creates a new form and appends it to the collectionHolder
     */
    function addNewForm() {
        // getting the prototype
        // the prototype is the form itself, plain html
        var prototype = $collectionHolder.data('prototype');
        // get the index
        // this is the index we set when the document was ready, look above for more info
        var index = $collectionHolder.data('index');
        // create the form
        var newForm = prototype;

        newForm = newForm.replace(/__name__/g, index);
        //newForm.find("#winter_jobs_RoadSections_"+index+"_SaltChecked").parent().before("<div class=\"col-md-1\">");
        //newForm.find("#winter_jobs_RoadSections_"+index+"_SaltValue").parent().before("<div class=\"col-md-1\">");
        $collectionHolder.data('index', index+1);



        // replace the __name__ string in the html using a regular expression with the index value
        // incrementing the index data and setting it again to the collectionHolder
        // create the panel
        // this is the panel that will be appending to the collectionHolder
        var $panel = $('' +
            '<div class="panel card p-3 col-sm-12 col-md-12">' +
            '</div>');
        // create the panel-body and append the form to it
        var $panelBody = $('<div class="panel-body" style="margin-bottom: 32px;"></div>').append(newForm);


        var Salt =              $panelBody.find('[id*=_SaltValue]').attr('id');
        var SaltChecked =       $panelBody.find('[id*=_SaltChecked]').attr('id');
        var Sand =              $panelBody.find('[id*=_SandValue]').attr('id');
        var SandChecked =       $panelBody.find('[id*=_SandChecked]').attr('id');
        var Solution =          $panelBody.find('[id*=_SolutionValue]').attr('id');
        var SolutionChecked =   $panelBody.find('[id*=_SolutionChecked]').attr('id');

        var sectionSearch =     $panelBody.find('[id*=_RoadSectionSearch]').attr('id');
        var sectionId =         $panelBody.find('[id*=_SectionId]').attr('id');
        var sectionType =       $panelBody.find('[id*=_SectionType]').attr('id');
        var sectionName =       $panelBody.find('[id*=_SectionName]').attr('id');
        var sectionBegin =      $panelBody.find('[id*=_SectionBegin]').attr('id');
        var sectionEnd =        $panelBody.find('[id*=_SectionEnd]').attr('id');

        // $('#'.Salt).parent().parent().addClass('row');

        $panel.append($panelBody);

        addRemoveButton($panel);
        // append the panel to the addNewItem
        // we are doing it this way to that the link is always at the bottom of the collectionHolder
        $collectionHolder.append($panel);

        var forms = [];

        $panelBody.find($('.form-group')).each(function () {
            $this = $(this);
            forms.push($this);
        });

        forms[0].wrap('<div class = "col-md-3"></div>');
        forms[1].wrap('<div class = "col-md-3"></div>');
        forms[2].wrap('<div class = "col-md-3"></div>');
        forms[3].wrap('<div class = "col-md-3"></div>');


        forms[4].wrap('<div class = "col-md-1"></div>');
        forms[5].wrap('<div class = "col-md-1"></div>');
        forms[6].wrap('<div class = "col-md-1"></div>');

        forms[7].wrap('<div class = "col-md-3"></div>');
        forms[8].wrap('<div class = "col-md-3"></div>');
        forms[9].wrap('<div class = "col-md-3"></div>');




        $panelBody.find('#winter_jobs_RoadSections_'+index).addClass('row col-12');
       // $panelBody.find('.check_class').wrapAll('<div class = "col-md-3"></div>')

        refreshAutocorrect();
    }

    /**
     * adds a remove button to the panel that is passed in the parameter
     * @param $panel
     */
    function addRemoveButton ($panel) {
        // create remove button
        var $removeButton = $('<a href="#" class="btn btn-danger col-md-2">{% trans %}Remove {% endtrans %}</a>');
        // appending the removebutton to the panel footer
        var $panelFooter = $('<div class="panel-footer"></div>').append($removeButton);
        // handle the click event of the remove button
        $removeButton.click(function (e) {
            e.preventDefault();
            // gets the parent of the button that we clicked on "the panel" and animates it
            // after the animation is done the element (the panel) is removed from the html
            $(e.target).parents('.panel').fadeOut(150, function () {
                $(this).remove();
            });

            refreshAutocorrect();
        });
        // append the footer to the panel
        $panelFooter.after("<br>");
        $panel.append($panelFooter);
    }

    function refreshAutocorrect() {


        $('#road_section_list').find('.panel').each(function () {

            var Salt =              $(this).find('[id*=_SaltValue]').attr('id');
            var SaltChecked =       $(this).find('[id*=_SaltChecked]').attr('id');
            var Sand =              $(this).find('[id*=_SandValue]').attr('id');
            var SandChecked =       $(this).find('[id*=_SandChecked]').attr('id');
            var Solution =          $(this).find('[id*=_SolutionValue]').attr('id');
            var SolutionChecked =   $(this).find('[id*=_SolutionChecked]').attr('id');

            var sectionSearch =     $(this).find('[id*=_RoadSectionSearch]').attr('id');
            var sectionId =         $(this).find('[id*=_SectionId]').attr('id');
            var sectionType =       $(this).find('[id*=_SectionType]').attr('id');
            var sectionName =       $(this).find('[id*=_SectionName]').attr('id');
            var sectionBegin =      $(this).find('[id*=_SectionBegin]').attr('id');
            var sectionEnd =        $(this).find('[id*=_SectionEnd]').attr('id');

            var saltLabel = $(this).find('label[for*=_SaltValue]');
            var sandLabel = $(this).find('label[for*=_SandValue]');
            var solutionLabel = $(this).find('label[for*=_SolutionValue]');

            if($('#'+SaltChecked).prop('checked'))
            {
                $('#'+Salt).css('display', 'inline');
                saltLabel.css('display', 'inline');
            }else{
                $('#'+Salt).css('display', 'none');
                saltLabel.css('display', 'none');
            }

            if($('#'+SandChecked).prop('checked'))
            {
                $('#'+Sand).css('display', 'inline');
                sandLabel.css('display', 'inline');
            }else{
                $('#'+Sand).css('display', 'none');
                sandLabel.css('display', 'none');
            }

            if($('#'+SolutionChecked).prop('checked'))
            {
                $('#'+Solution).css('display', 'inline');
                solutionLabel.css('display', 'inline');
            }else{
                $('#'+Solution).css('display', 'none');
                solutionLabel.css('display', 'none');
            }

            $('#' + SaltChecked).click(function () {

                if ($('#' + SaltChecked).prop('checked')) {
                    $('#'+Salt).css('display', 'inline');
                    saltLabel.css('display', 'inline');
                }
                else {
                    $('#'+Salt).val("");
                    $('#'+Salt).css('display', 'none');
                    saltLabel.css('display', 'none');
                }
            });
            $('#' + SandChecked).click(function () {
                if ($('#' + SandChecked).prop('checked')) {
                    $('#'+Sand).css('display', 'inline');
                    sandLabel.css('display', 'inline');
                }else{
                    $('#'+Sand).val("");
                    $('#'+Sand).css('display', 'none');
                    sandLabel.css('display', 'none');
                }
            });
            $('#' + SolutionChecked).click(function () {
                if ($('#' + SolutionChecked).prop('checked')) {
                    $('#'+Solution).css('display', 'inline');
                    solutionLabel.css('display', 'inline');
                }else{
                    $('#'+Solution).val("");
                    $('#'+Solution).css('display', 'none');
                    solutionLabel.css('display', 'none');
                }
            });


            $('#'+sectionSearch).autocomplete({
                source: "{{ path('search/road/winter') }}",
                minLength: 1,
                delay: 500,
                select: function( event, ui ) {
                    $('#'+sectionId).val(ui.item.section_id),
                        $('#'+sectionType).val(ui.item.section_type), //****
                        $('#'+sectionName).val(ui.item.road_name),
                        $('#'+sectionBegin).val(ui.item.section_begin),
                        $('#'+sectionEnd).val(ui.item.section_end)
                },
            });


        })
    }

</script>

<style>
    .col-centered {
        display:inline-block;
        float:none;
        /* reset the text-align */
        text-align:left;
        /* inline-block space fix */
        margin-right:-4px;
        text-align: center;
    }
</style>


{{ form_start(form) }}
<div id="road_section_list" data-prototype="{{ form_widget(form.RoadSections.vars.prototype)|e('html_attr') }}" class="row">
    {% for row in form.RoadSections %}
        <div class="panel card p-3 col-sm-12 col-md-12 " style="margin-bottom: 10px;">
            <div class="panel-body row col-12">

                <div class="col-md-3">
                    {{  form_row(row.RoadSectionSearch) }}
                </div>

                <div class="col-md-3">
                    {{  form_row(row.SectionBegin) }}
                </div>
                <div class="col-md-3">
                    {{  form_row(row.SectionEnd) }}
                </div>
                <div class="col-md-3">
                    {{ form_row(row.Quadrature) }}
                </div>

                <div class="col-md-1">
                    {{ form_row(row.SaltChecked) }}
                </div>
                <div class="col-md-1">
                    {{ form_row(row.SandChecked) }}
                </div>
                <div class="col-md-1">
                    {{ form_row(row.SolutionChecked) }}
                </div>

                <div class="col-md-3">
                    {{ form_row(row.SaltValue) }}
                </div>
                <div class="col-md-3">
                    {{ form_row(row.SandValue) }}
                </div>
                <div class="col-md-3">
                    {{ form_row(row.SolutionValue) }}
                </div>

                {{ form_row(row.SectionId) }}
                {{ form_row(row.SectionName) }}
                {{ form_row(row.SectionType) }}
                {{ form_row(row.level) }}


            </div>
        </div>
    {% endfor %}
</div>

<br>
<a id="button_to_add_new_road" class="container-fluid btn btn-lg btn-info" href="#">{% trans %}Add new item{% endtrans %}</a>
<hr>
<br>

<div class="row" style="-webkit-align-items: center;">
    <div class="col-sm-3">
        {{ form_row(form.Date) }}
    </div>
    <div class="col-sm-3">
        {{ form_row(form.TimeFrom) }}
    </div>
    <div class="col-sm-3">
        {{ form_row(form.TimeTo) }}
    </div>
</div>
<hr>
<div class="row">
    <div class="col-sm-6">
        {{ form_row(form.Mechanism) }}
    </div>
    <div class="col-sm-6">
        {{ form_row(form.Job) }}
    </div>
</div>

<div class="row">
    <div class="col-sm-6">
        {{ form_row(form.JobName) }}
    </div>
    <div class="col-sm-6">
        {{ form_row(form.JobQuantity) }}
    </div>
</div>

<div class="col-12">
    {{ form_row(form.save) }}
</div>

{{ form_end(form) }}